pipeline {
	agent any
	tools{ maven 'mvn-3.3.9' }
	stages {
		stage ('Initialize') {
			steps { sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                ''' }
		}
		stage('Checkout SCM') {
			steps { checkout scm }
		}

		stage('Build') {
			steps {
				script {
					dir ('Projects/addPayment') {
						sh "mvn clean install -Dmaven.test.skip=true"
					}
																	
				}

			}
		}
		
        stage('Docker Image') {
	        steps {
		        script {
		        	sh "cp Projects/addPayment/target/*.jar Projects/addPayment/dockerfile/"

		            dir ('Projects/addPayment/dockerfile') {
		                def addPaymentApp = docker.build("Int_region/add-payment-service:${env.BUILD_ID}")
		            }

		            }			            	            		            
	            }
	            
            }
        stage ('Add Payment Run') {
        	steps {
        	script {
            	docker.image("Int_region/add-payment-service:${env.BUILD_ID}").run('-p 3333:3333 -h addPayment --name addPayment --network  devops_default --dns=172.18.0.5')
            	sh 'sleep 10'
            	}
            }
        }
		stage('Unit Testing & Code Analysis') {
			steps {
				script {
					dir ('Projects/addPayment') {
					withSonarQubeEnv('sonar_dev_QB') {
						sh "mvn test sonar:sonar -Dsonar.analysis.mode=preview -Dsonar.issuesReport.html.enable=true -Dsonar.login=sonar -Dsonar.password=sonar"
						}
					}
																	
				}

			}
		}		
		stage("Quality Gate"){
			steps {
				timeout(time: 1, unit: 'HOURS') {
					// Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
					// true = set pipeline to UNSTABLE, false = don't
					// Requires SonarQube Scanner for Jenkins 2.7+
					waitForQualityGate abortPipeline: true
				}
			}
		}        
      
	}
}
