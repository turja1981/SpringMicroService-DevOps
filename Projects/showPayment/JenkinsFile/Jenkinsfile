pipeline {
	agent any
	tools{ maven 'mvn-3.3.9' }
	stages {
		stage ('Initialize') { steps { sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                ''' } }
		stage('Checkout SCM') { steps { checkout scm } }

		stage('Build') {
			steps {
				script {

					dir ('Projects/showPayment') { sh "mvn clean install -Dmaven.test.skip=true " }
				}
			}
		}

		stage('Docker Image') {
			steps {
				script {

					sh "cp Projects/showPayment/target/*.jar Projects/showPayment/dockerfile/"


					dir ('Projects/showPayment/dockerfile') {
						def showPaymentApp = docker.build("int_region/show-payment-service:${env.BUILD_ID}")
					}
				}
			}
		}

		stage ('Show Payment Run') {
			steps {
				script {
					docker.image("int_region/show-payment-service:${env.BUILD_ID}").run('-p 3334:3334 -h showPayment --name showPayment --network  devops_default --dns=172.18.0.6')
					sh 'sleep 10'
				}
			}
		}
		stage('Unit Testing & Code Analysis') {
			steps {
				script {
					dir ('Projects/showPayment') {
						withSonarQubeEnv('sonar_dev_QB') { sh "mvn test sonar:sonar -Dsonar.login=sonar -Dsonar.password=sonar" }
					}
				}
			}
			post {
				always {
				steps {
					 //generate cucumber reports
					cucumber '**/target/*.json' 
				    // send report to slack
				    step([$class: 'CucumberReportPublisher', jsonReportDirectory: 'target/', fileIncludePattern: '*.json'])
				    cucumberSendSlack:  json: '**/target/*.json'
				    }	}
			}
		}
	}
}

